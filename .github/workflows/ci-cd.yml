name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - '**'
  push:
    branches:
      - '**'
  workflow_call:
  workflow_dispatch:

jobs:
  test-and-lint:
    if: ${{ github.event_name != 'workflow_call' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 23
        
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23
          
      - name: Install dependencies for Web Client
        working-directory: ./web-client
        run: yarn install

      - name: Run Linter for Web Client
        working-directory: ./web-client
        run: npm run lint

      - name: Run Tests for Web Client
        working-directory: ./web-client
        run: npm run test

      - name: Install dependencies for Docs
        working-directory: ./docs
        run: yarn install
      
      - name: Lint Docs
        working-directory: ./docs
        run: |
          echo "Linting Docusaurus..."
          npx prettier --check "**/*.md"
      
      - name: Build Docs to Ensure Validity
        working-directory: ./docs
        run: npm run build

      - name: Install Go dependencies
        working-directory: ./vote-api
        run: go mod tidy

      - name: Run Go Linter
        working-directory: ./vote-api
        run: |
          echo "Running Go linter..."
          go fmt ./...
          go vet ./...

      - name: Run Go Tests
        working-directory: ./vote-api
        run: go test ./... -v

  merge-or-deploy:
    if: ${{ github.event_name == 'workflow_dispatch' }}
    needs: [test-and-lint]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Merge into main
        if: ${{ github.ref_name == 'demo/demo' }}
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions@github.com"
          git checkout main
          git merge demo/demo
          git push origin main

      - name: Deploy to Production (SSH -> VPS)
        if: ${{ github.ref_name == 'main' }}
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USER }}
          key: ${{ secrets.PRODUCTION_SSH_KEY }}
          script: |
            cd 2024-tp-final-devops
            git pull origin main
            docker compose -f docker-compose.prod.yml up --build -d

      - name: Deploy to Docker Hub
        if: ${{ github.ref_name == 'main' }}
        run: |
            echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
            docker tag 2024-tp-final-devops-web-client:latest ${{ secrets.DOCKER_USERNAME }}/web-client:latest
            docker push ${{ secrets.DOCKER_USERNAME }}/web-client:latest
            docker tag 2024-tp-final-devops-vote-api:latest ${{ secrets.DOCKER_USERNAME }}/vote-api:latest
            docker push ${{ secrets.DOCKER_USERNAME }}/vote-api:latest
            docker tag 2024-tp-final-devops-docs:latest ${{ secrets.DOCKER_USERNAME }}/docs:latest
            docker push ${{ secrets.DOCKER_USERNAME }}/docs:latest
